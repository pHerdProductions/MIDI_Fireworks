//-------------MINIM------------------------
import ddf.minim.analysis.*;
import ddf.minim.*;

Minim minim;
AudioInput in;
AudioPlayer song;
FFT fft;

int v;

float[] peaks;

int peak_hold_time = 10;  // how long before peak decays
int[] peak_age;  // tracks how long peak has been stable, before decaying

// how wide each 'peak' band is, in fft bins
int binsperband = 10;
int peaksize; // how many individual peak bands we have (dep. binsperband)
float gain = 40; // in dB
float dB_scale = 2.0;  // pixels per dB

int buffer_size = 1024;  // also sets FFT size (frequency resolution)
float sample_rate = 44100;

int spectrum_height = 200; // determines range of dB shown
int legend_height = 20;
int spectrum_width = 128; // determines how much of spectrum we see
int legend_width = 40;

int numLevel = 0;

int SLIDER1 = 0;
int SLIDER2 = 0;
int SLIDER3 = 0;

//-----------------------------------------

import themidibus.*;

int FR = 60;

int keys = 61;

ArrayList<Firework> fireworks = new ArrayList<Firework>();

ArrayList<Explosion> explosions = new ArrayList<Explosion>();

ArrayList<ShapedExplosion> shapedExplosions = new ArrayList<ShapedExplosion>();

int colors[][] = {{255, 0, 0}, {0, 255, 0}, {0, 0, 255}, {255, 255, 0}, {255, 0, 255}, {0, 255, 255}};

int testPoints[][] = {{0, 0}, {0, -50}, {0, 50}, {-50, 0}, {-50, 50}, {50, 0}, {50, 50}, {-50, -50}, {50, -50}};

float heartShape[][] = {{-4, 157}, {-17, 138}, {-35, 124}, {-57, 111}, {-82, 90}, {-105, 61}, {-118, 13}, {-116, -15}, {-105, -42}, {-89, -80}, {-66, -94}, {-41, -103}, {-24, -98}, {-7, -81}, {4, -56}, {6, -33}, {19, -51}, {30, -84}, {42, -94}, {62, -97}, {98, -89}, {110, -67}, {125, -41}, {125, -6}, {123, 18}, {111, 45}, {93, 75}, {72, 93}, {49, 114}, {28, 138}, {15, 174}, {19, 156}};
float ralphShape[][] = {{-379, 68}, {-386, 24}, {-387, -21}, {-384, -87}, {-390, -143}, {-391, -193}, {-375, -216}, {-312, -212}, {-271, -192}, {-253, -157}, {-248, -131}, {-255, -99}, {-269, -75}, {-285, -65}, {-323, -49}, {-342, -38}, {-332, -24}, {-309, -17}, {-290, -5}, {-277, 10}, {-270, 56}, {-272, 63}, {-270, 35}, {-173, -19}, {-195, -21}, {-206, -10}, {-211, 21}, {-201, 39}, {-179, 47}, {-167, 43}, {-156, 25}, {-158, 8}, {-162, -7}, {-147, 9}, {-136, 29}, {-122, 44}, {-108, -188}, {-104, -133}, {-103, -120}, {-101, -100}, {-98, -86}, {-94, -65}, {-87, -31}, {-82, -3}, {-79, 23}, {-77, 47}, {-106, -162}, {-55, -230}, {-47, -210}, {-36, -171}, {-31, -142}, {-27, -114}, {-22, -82}, {-14, -50}, {-7, -19}, {-4, 13}, {-4, 40}, {-34, -221}, {-15, -225}, {41, -224}, {89, -217}, {107, -208}, {120, -188}, {127, -162}, {123, -135}, {103, -117}, {73, -103}, {44, -90}, {22, -86}, {19, -85}, {167, -209}, {170, -196}, {183, -168}, {184, -141}, {183, -118}, {181, -86}, {182, -53}, {178, -26}, {174, -5}, {170, 23}, {174, 47}, {274, -207}, {281, -191}, {289, -152}, {298, -121}, {305, -93}, {303, -36}, {301, 3}, {296, 44}, {216, -87}, {228, -87}, {248, -87}, {262, -86}, {282, -85}, {286, -85}};
float fuckShape[][] = {{-133, 85}, {-126, 56}, {-126, 28}, {-130, 3}, {-129, -24}, {-129, -52}, {-130, -67}, {-112, -69}, {-101, -68}, {-87, -66}, {-68, -66}, {-57, -65}, {-117, -5}, {-108, -5}, {-86, -5}, {-25, -52}, {-25, -33}, {-23, -9}, {-23, 9}, {-20, 43}, {-18, 64}, {-4, 76}, {13, 78}, {34, 70}, {44, 56}, {45, 35}, {44, 11}, {43, -11}, {43, -39}, {44, -54}, {113, -58}, {104, -59}, {91, -54}, {81, -42}, {73, -18}, {73, -2}, {77, 28}, {94, 58}, {102, 64}, {137, 69}, {144, 68}, {134, -57}, {144, -54}, {180, -60}, {184, -45}, {185, -22}, {183, 1}, {183, 21}, {183, 42}, {182, 56}, {184, 79}, {190, -4}, {198, -15}, {208, -25}, {213, -29}, {227, -38}, {235, -45}, {244, -53}, {198, 7}, {212, 23}, {222, 31}, {238, 44}, {253, 59}, {260, 68}};
float spiralShape[][] = {{0, -10}, {5, -17}, {8, -18}, {12, -17}, {17, -14}, {25, -6}, {29, 0}, {28, 16}, {22, 28}, {14, 32}, {4, 33}, {-12, 33}, {-18, 30}, {-30, 20}, {-35, 11}, {-43, -11}, {-43, -21}, {-39, -40}, {-32, -49}, {-24, -55}, {-12, -58}, {0, -60}, {17, -60}, {45, -54}, {62, -46}, {75, -34}, {80, -17}, {80, 0}, {78, 25}, {72, 43}, {60, 53}, {44, 62}, {26, 66}, {2, 69}, {-19, 69}, {-39, 65}, {-53, 59}, {-62, 53}, {-75, 41}, {-83, 26}, {-92, 8}, {-98, -8}, {-100, -34}, {-96, -55}, {-89, -71}, {-81, -79}, {-62, -91}, {-40, -99}, {-17, -105}, {-1, -107}, {27, -107}, {41, -106}, {55, -101}, {88, -87}, {107, -75}, {125, -55}, {140, -25}, {141, -9}, {141, 7}, {139, 32}, {137, 48}, {126, 68}, {109, 86}, {88, 102}, {65, 115}, {32, 121}, {-4, 123}, {-24, 124}, {-36, 124}, {-55, 120}, {-75, 114}, {-95, 104}, {-115, 91}, {-123, 84}, {-132, 73}, {-141, 58}, {-146, 44}, {-150, 30}, {-153, 11}, {-152, -5}, {-151, -20}, {-146, -32}, {-139, -42}, {-126, -55}, {-110, -69}, {-97, -78}, {-86, -86}};
float spiral2Shape[][] = {{-12, -5}, {-27, -22}, {-40, -37}, {-62, -61}, {-79, -75}, {-87, -86}, {15, -5}, {33, -24}, {54, -43}, {72, -61}, {81, -72}, {4, 12}, {17, 23}, {27, 36}, {42, 54}, {59, 77}, {68, 87}, {-8, 10}, {-18, 20}, {-24, 29}, {-41, 45}, {-50, 57}, {-57, 66}, {-66, 77}, {-72, 85}, {-1, -9}, {-5, -33}, {1, -53}, {12, -74}, {23, -86}, {38, -95}, {60, -102}, {89, -106}, {113, -106}, {145, -103}, {174, -88}, {192, -71}, {199, -50}, {12, 11}, {31, 14}, {53, 23}, {73, 31}, {100, 45}, {113, 64}, {115, 86}, {114, 115}, {109, 132}, {102, 151}, {90, 161}, {76, 168}, {56, 175}, {32, 181}, {2, 185}, {-2, 24}, {-4, 42}, {-6, 62}, {-15, 83}, {-29, 103}, {-49, 118}, {-83, 126}, {-91, 127}, {-123, 118}, {-137, 98}, {-151, 64}, {-152, 50}, {-155, 22}, {-34, 3}, {-60, -3}, {-84, -18}, {-108, -34}, {-120, -45}, {-129, -70}, {-131, -93}, {-128, -114}, {-117, -137}, {-108, -144}, {-98, -147}, {-80, -150}, {-76, -150}, {-56, -150}, {-15, -148}, {-36, -147}, {1, 0}};
float cFlower[][] = {{-3,-39,255,192,0}, {-31,-37,255,192,0}, {-43,-25,255,192,0}, {-47,-1,255,192,0}, {-41,19,255,192,0}, {-32,30,255,192,0}, {-17,38,255,192,0}, {1,37,255,192,0}, {23,35,255,192,0}, {36,31,255,192,0}, {54,17,255,192,0}, {49,1,255,192,0}, {39,-19,255,192,0}, {33,-28,255,192,0}, {25,-31,255,192,0}, {4,-37,255,192,0}, {-20,-25,255,255,0}, {-30,-16,255,255,0}, {-28,-3,255,255,0}, {-11,13,255,255,0}, {13,16,255,255,0}, {28,11,255,255,0}, {23,-8,255,255,0}, {10,-18,255,255,0}, {0,-19,255,255,0}, {-32,-53,255,0,255}, {-39,-75,255,0,255}, {-26,-118,255,0,255}, {-9,-140,255,0,255}, {11,-149,255,0,255}, {28,-151,255,0,255}, {67,-148,255,0,255}, {80,-137,255,0,255}, {91,-120,255,0,255}, {96,-94,255,0,255}, {89,-70,255,0,255}, {71,-46,255,0,255}, {56,-33,255,0,255}, {58,-27,255,0,255}, {78,-39,255,0,255}, {95,-43,255,0,255}, {112,-44,255,0,255}, {138,-46,255,0,255}, {141,-46,255,0,255}, {153,-40,255,0,255}, {179,-17,255,0,255}, {196,11,255,0,255}, {196,35,255,0,255}, {196,57,255,0,255}, {182,75,255,0,255}, {143,87,255,0,255}, {111,91,255,0,255}, {102,92,255,0,255}, {100,92,255,0,255}, {80,80,255,0,255}, {71,75,255,0,255}, {45,54,255,0,255}, {39,47,255,0,255}, {37,42,255,0,255}, {36,58,255,0,255}, {36,83,255,0,255}, {33,93,255,0,255}, {20,111,255,0,255}, {0,128,255,0,255}, {-11,135,255,0,255}, {-23,141,255,0,255}, {-29,143,255,0,255}, {-50,148,255,0,255}, {-55,149,255,0,255}, {-65,147,255,0,255}, {-80,140,255,0,255}, {-99,129,255,0,255}, {-106,118,255,0,255}, {-115,91,255,0,255}, {-107,72,255,0,255}, {-98,56,255,0,255}, {-93,49,255,0,255}, {-78,37,255,0,255}, {-67,35,255,0,255}, {-53,30,255,0,255}, {-51,21,255,0,255}, {-71,15,255,0,255}, {-91,11,255,0,255}, {-104,9,255,0,255}, {-121,4,255,0,255}, {-133,-5,255,0,255}, {-139,-15,255,0,255}, {-149,-34,255,0,255}, {-151,-45,255,0,255}, {-153,-63,255,0,255}, {-151,-80,255,0,255}, {-144,-97,255,0,255}, {-134,-104,255,0,255}, {-115,-111,255,0,255}, {-103,-113,255,0,255}, {-63,-106,255,0,255}, {-40,-96,255,0,255}, {-121,-119,255,123,255}, {-118,-136,255,123,255}, {-102,-160,255,123,255}, {-87,-173,255,123,255}, {-72,-180,255,123,255}, {-55,-182,255,123,255}, {-38,-182,255,123,255}, {-25,-179,255,123,255}, {-11,-175,255,123,255}, {9,-168,255,123,255}, {96,-130,255,123,255}, {134,-132,255,123,255}, {158,-132,255,123,255}, {169,-126,255,123,255}, {190,-105,255,123,255}, {196,-67,255,123,255}, {196,-41,255,123,255}, {192,-19,255,123,255}, {-19,143,255,123,255}, {-17,143,255,123,255}, {24,154,255,123,255}, {50,157,255,123,255}, {85,158,255,123,255}, {103,154,255,123,255}, {116,143,255,123,255}, {120,124,255,123,255}, {119,109,255,123,255}, {-158,-36,255,123,255}, {-167,-21,255,123,255}, {-172,-2,255,123,255}, {-174,14,255,123,255}, {-167,36,255,123,255}, {-147,59,255,123,255}, {-125,73,255,123,255}, {-115,78,255,123,255}, {1158,-695,255,123,255}, {-174,72,31,107,255}, {-213,73,31,107,255}, {-238,73,31,107,255}, {-291,66,31,107,255}, {-299,64,31,107,255}, {-314,56,31,107,255}, {-335,42,31,107,255}, {-359,21,31,107,255}, {-383,-13,31,107,255}, {-388,-31,31,107,255}, {-392,-53,31,107,255}, {-389,-71,31,107,255}, {-388,-79,31,107,255}, {-380,-103,31,107,255}, {-372,-118,31,107,255}, {-361,-130,31,107,255}, {-348,-142,31,107,255}, {-333,-147,31,107,255}, {-297,-154,31,107,255}, {-264,-156,31,107,255}, {-248,-156,31,107,255}, {-222,-149,31,107,255}, {-188,-137,31,107,255}, {-168,-127,31,107,255}, {-150,-119,31,107,255}, {-76,-197,31,107,255}, {-77,-234,31,107,255}, {-75,-263,31,107,255}, {-68,-287,31,107,255}, {-56,-311,31,107,255}, {-45,-323,31,107,255}, {-31,-332,31,107,255}, {-6,-342,31,107,255}, {24,-349,31,107,255}, {52,-349,31,107,255}, {97,-340,31,107,255}, {138,-320,31,107,255}, {153,-282,31,107,255}, {148,-246,31,107,255}, {139,-212,31,107,255}, {132,-182,31,107,255}, {128,-151,31,107,255}, {123,-123,31,107,255}, {204,-85,31,107,255}, {220,-87,31,107,255}, {284,-93,31,107,255}, {348,-92,31,107,255}, {393,-81,31,107,255}, {414,-64,31,107,255}, {442,-40,31,107,255}, {463,-8,31,107,255}, {470,20,31,107,255}, {467,56,31,107,255}, {459,109,31,107,255}, {447,155,31,107,255}, {418,171,31,107,255}, {369,179,31,107,255}, {318,177,31,107,255}, {287,174,31,107,255}, {262,169,31,107,255}, {198,127,31,107,255}, {169,107,31,107,255}, {210,132,31,107,255}, {239,150,31,107,255}, {263,161,31,107,255}, {107,162,31,107,255}, {110,189,31,107,255}, {111,228,31,107,255}, {114,274,31,107,255}, {110,309,31,107,255}, {99,333,31,107,255}, {96,359,31,107,255}, {80,368,31,107,255}, {66,379,31,107,255}, {29,387,31,107,255}, {0,390,31,107,255}, {-39,391,31,107,255}, {-65,391,31,107,255}, {-93,385,31,107,255}, {-110,379,31,107,255}, {-132,370,31,107,255}, {-149,357,31,107,255}, {-162,326,31,107,255}, {-170,278,31,107,255}, {-163,220,31,107,255}, {-150,181,31,107,255}, {-137,157,31,107,255}, {-120,140,31,107,255}, {-105,128,31,107,255}, {-240,73,31,107,255}, {-277,81,31,107,255}, {-304,93,31,107,255}, {-334,111,31,107,255}, {-350,126,31,107,255}, {-367,154,31,107,255}, {-366,178,31,107,255}, {-355,203,31,107,255}, {-334,226,31,107,255}, {-303,250,31,107,255}, {-260,259,31,107,255}, {-228,258,31,107,255}, {-199,252,31,107,255}, {-179,239,31,107,255}, {-170,232,31,107,255}, {119,267,31,107,255}, {154,293,31,107,255}, {181,307,31,107,255}, {208,319,31,107,255}, {251,329,31,107,255}, {269,332,31,107,255}, {310,328,31,107,255}, {330,309,31,107,255}, {332,289,31,107,255}, {328,263,31,107,255}, {314,222,31,107,255}, {302,199,31,107,255}, {294,187,31,107,255}, {275,171,31,107,255}, {145,-220,31,107,255}, {157,-235,31,107,255}, {181,-256,31,107,255}, {209,-274,31,107,255}, {221,-282,31,107,255}, {265,-293,31,107,255}, {334,-284,31,107,255}, {374,-274,31,107,255}, {396,-260,31,107,255}, {397,-236,31,107,255}, {382,-197,31,107,255}, {363,-164,31,107,255}, {338,-137,31,107,255}, {305,-101,31,107,255}, {293,-90,31,107,255}, {-208,-154,31,107,255}, {-225,-171,31,107,255}, {-242,-189,31,107,255}, {-272,-213,31,107,255}, {-316,-277,31,107,255}, {-321,-292,31,107,255}, {-316,-304,31,107,255}, {-290,-321,31,107,255}, {-254,-333,31,107,255}, {-228,-339,31,107,255}, {-209,-339,31,107,255}, {-182,-331,31,107,255}, {-143,-316,31,107,255}, {-110,-291,31,107,255}, {-87,-272,31,107,255}, {-64,-254,31,107,255}};
float cShape[][] = {{-24,2,255,0,0}, {-17,6,255,0,0}, {-13,12,255,0,0}, {-8,16,255,0,0}, {-3,21,255,0,0}, {3,15,255,0,0}, {13,9,255,0,0}, {22,5,255,0,0}, {29,0,255,0,0}, {26,-7,255,0,0}, {22,-11,255,0,0}, {17,-16,255,0,0}, {8,-22,255,0,0}, {-1,-27,255,0,0}, {-8,-24,255,0,0}, {-16,-13,255,0,0}, {-23,-8,255,0,0}, {-32,-4,255,0,0}, {-36,-8,255,255,0}, {-36,-14,255,255,0}, {-36,-23,255,255,0}, {-35,-29,255,255,0}, {-26,-32,255,255,0}, {-9,-32,255,255,0}, {-2,-32,255,255,0}, {7,-32,255,255,0}, {18,-32,255,255,0}, {24,-31,255,255,0}, {33,-30,255,255,0}, {39,-20,255,255,0}, {35,-10,255,255,0}, {35,-1,255,255,0}, {35,9,255,255,0}, {35,15,255,255,0}, {36,21,255,255,0}, {36,23,255,255,0}, {28,28,255,255,0}, {21,28,255,255,0}, {-1,28,255,255,0}, {-5,28,255,255,0}, {-14,29,255,255,0}, {-19,29,255,255,0}, {-31,30,255,255,0}, {-32,30,255,255,0}, {-34,30,255,255,0}, {-40,13,255,255,0}, {-39,6,255,255,0}, {-37,17,255,255,0}, {3,27,255,255,0}, {11,29,255,255,0}, {-35,-34,255,0,255}, {-24,-45,255,0,255}, {-18,-52,255,0,255}, {-13,-57,255,0,255}, {-5,-65,255,0,255}, {5,-71,255,0,255}, {7,-73,255,0,255}, {9,-69,255,0,255}, {22,-56,255,0,255}, {26,-53,255,0,255}, {27,-51,255,0,255}, {37,-42,255,0,255}, {41,-37,255,0,255}, {49,-28,255,0,255}, {55,-20,255,0,255}, {57,-17,255,0,255}, {64,-11,255,0,255}, {70,-6,255,0,255}, {74,0,255,0,255}, {78,5,255,0,255}, {78,8,255,0,255}, {68,16,255,0,255}, {49,28,255,0,255}, {38,38,255,0,255}, {34,42,255,0,255}, {28,47,255,0,255}, {23,52,255,0,255}, {20,55,255,0,255}, {15,59,255,0,255}, {3,66,255,0,255}, {-1,70,255,0,255}, {-6,66,255,0,255}, {-9,63,255,0,255}, {-16,60,255,0,255}, {-25,55,255,0,255}, {-29,52,255,0,255}, {-36,46,255,0,255}, {-42,42,255,0,255}, {-46,37,255,0,255}, {-49,34,255,0,255}, {-55,29,255,0,255}, {-56,27,255,0,255}, {-57,26,255,0,255}, {-60,23,255,0,255}, {-66,17,255,0,255}, {-72,13,255,0,255}, {-73,13,255,0,255}, {-73,7,255,0,255}, {-69,1,255,0,255}, {-64,-6,255,0,255}, {-58,-13,255,0,255}, {-54,-17,255,0,255}, {-48,-23,255,0,255}, {-43,-28,255,0,255}, {-36,-34,255,0,255}, {-32,-37,255,0,255}, {-26,-40,255,0,255}, {67,21,255,0,255}, {64,21,255,0,255}, {58,25,255,0,255}, {55,29,255,0,255}, {50,36,255,0,255}, {-73,5,0,255,255}, {-73,-9,0,255,255}, {-73,-19,0,255,255}, {-74,-28,0,255,255}, {-75,-37,0,255,255}, {-76,-45,0,255,255}, {-76,-52,0,255,255}, {-76,-63,0,255,255}, {-77,-73,0,255,255}, {-77,-79,0,255,255}, {-67,-81,0,255,255}, {-62,-81,0,255,255}, {-49,-81,0,255,255}, {-40,-80,0,255,255}, {-33,-79,0,255,255}, {-18,-79,0,255,255}, {4,-79,0,255,255}, {22,-79,0,255,255}, {32,-79,0,255,255}, {38,-79,0,255,255}, {54,-80,0,255,255}, {59,-80,0,255,255}, {62,-80,0,255,255}, {66,-80,0,255,255}, {78,-79,0,255,255}, {83,-78,0,255,255}, {83,-78,0,255,255}, {81,-59,0,255,255}, {81,-52,0,255,255}, {81,-48,0,255,255}, {84,-36,0,255,255}, {86,-24,0,255,255}, {86,-14,0,255,255}, {83,-5,0,255,255}, {82,3,0,255,255}, {82,15,0,255,255}, {82,22,0,255,255}, {83,32,0,255,255}, {84,44,0,255,255}, {85,55,0,255,255}, {84,65,0,255,255}, {83,70,0,255,255}, {83,74,0,255,255}, {70,77,0,255,255}, {37,77,0,255,255}, {20,77,0,255,255}, {10,77,0,255,255}, {4,77,0,255,255}, {-6,77,0,255,255}, {-9,77,0,255,255}, {-18,77,0,255,255}, {-30,77,0,255,255}, {-43,77,0,255,255}, {-49,77,0,255,255}, {-52,77,0,255,255}, {-61,77,0,255,255}, {-75,78,0,255,255}, {-76,78,0,255,255}, {-76,78,0,255,255}, {-78,63,0,255,255}, {-81,57,0,255,255}, {-84,49,0,255,255}, {-84,43,0,255,255}, {-82,35,0,255,255}, {-81,28,0,255,255}, {-80,19,0,255,255}, {-77,10,0,255,255}, {-76,7,0,255,255}, {-73,-3,0,255,255}, {30,76,0,255,255}, {42,77,0,255,255}, {56,77,0,255,255}, {62,77,0,255,255}, {-82,-84,0,0,255}, {-75,-87,0,0,255}, {-58,-99,0,0,255}, {-46,-107,0,0,255}, {-40,-113,0,0,255}, {-23,-122,0,0,255}, {-18,-127,0,0,255}, {-9,-132,0,0,255}, {2,-139,0,0,255}, {8,-143,0,0,255}, {16,-147,0,0,255}, {26,-143,0,0,255}, {52,-129,0,0,255}, {64,-115,0,0,255}, {73,-105,0,0,255}, {82,-97,0,0,255}, {94,-86,0,0,255}, {108,-75,0,0,255}, {123,-63,0,0,255}, {126,-59,0,0,255}, {127,-56,0,0,255}, {139,-45,0,0,255}, {151,-34,0,0,255}, {163,-24,0,0,255}, {170,-15,0,0,255}, {183,-6,0,0,255}, {203,7,0,0,255}, {207,11,0,0,255}, {185,26,0,0,255}, {169,34,0,0,255}, {153,44,0,0,255}, {130,61,0,0,255}, {108,75,0,0,255}, {88,88,0,0,255}, {78,94,0,0,255}, {61,103,0,0,255}, {45,112,0,0,255}, {31,121,0,0,255}, {20,129,0,0,255}, {6,137,0,0,255}, {-6,146,0,0,255}, {-13,151,0,0,255}, {-16,153,0,0,255}, {-28,149,0,0,255}, {-46,123,0,0,255}, {-54,113,0,0,255}, {-63,106,0,0,255}, {-78,95,0,0,255}, {-83,91,0,0,255}, {-95,79,0,0,255}, {-108,65,0,0,255}, {-120,52,0,0,255}, {-136,38,0,0,255}, {-149,25,0,0,255}, {-159,15,0,0,255}, {-166,10,0,0,255}, {-173,4,0,0,255}, {-176,0,0,0,255}, {-169,-10,0,0,255}, {-152,-20,0,0,255}, {-133,-32,0,0,255}, {-121,-38,0,0,255}, {-106,-50,0,0,255}, {-100,-61,0,0,255}, {-95,-67,0,0,255}, {-88,-75,0,0,255}, {-75,-86,0,0,255}, {-177,-3,0,255,0}, {-175,-15,0,255,0}, {-174,-20,0,255,0}, {-174,-28,0,255,0}, {-178,-38,0,255,0}, {-181,-45,0,255,0}, {-182,-57,0,255,0}, {-182,-73,0,255,0}, {-181,-88,0,255,0}, {-182,-109,0,255,0}, {-184,-124,0,255,0}, {-184,-136,0,255,0}, {-183,-144,0,255,0}, {-182,-151,0,255,0}, {-182,-153,0,255,0}, {-171,-155,0,255,0}, {-162,-155,0,255,0}, {-159,-155,0,255,0}, {-154,-155,0,255,0}, {-143,-155,0,255,0}, {-126,-155,0,255,0}, {-114,-155,0,255,0}, {-100,-154,0,255,0}, {-69,-154,0,255,0}, {-46,-154,0,255,0}, {-29,-154,0,255,0}, {-10,-154,0,255,0}, {-3,-154,0,255,0}, {4,-154,0,255,0}, {13,-154,0,255,0}, {24,-154,0,255,0}, {26,-154,0,255,0}, {39,-155,0,255,0}, {53,-156,0,255,0}, {56,-156,0,255,0}, {65,-156,0,255,0}, {74,-156,0,255,0}, {109,-156,0,255,0}, {110,-156,0,255,0}, {124,-156,0,255,0}, {145,-155,0,255,0}, {155,-155,0,255,0}, {161,-155,0,255,0}, {170,-155,0,255,0}, {179,-155,0,255,0}, {188,-155,0,255,0}, {203,-154,0,255,0}, {218,-154,0,255,0}, {218,-151,0,255,0}, {214,-136,0,255,0}, {213,-120,0,255,0}, {215,-102,0,255,0}, {220,-79,0,255,0}, {222,-67,0,255,0}, {222,-55,0,255,0}, {219,-41,0,255,0}, {221,-25,0,255,0}, {222,-11,0,255,0}, {222,-2,0,255,0}, {221,6,0,255,0}, {221,13,0,255,0}, {218,34,0,255,0}, {218,44,0,255,0}, {218,57,0,255,0}, {218,74,0,255,0}, {218,87,0,255,0}, {217,97,0,255,0}, {217,110,0,255,0}, {215,118,0,255,0}, {214,127,0,255,0}, {213,144,0,255,0}, {213,152,0,255,0}, {210,158,0,255,0}, {209,163,0,255,0}, {206,168,0,255,0}, {196,169,0,255,0}, {175,169,0,255,0}, {165,170,0,255,0}, {156,172,0,255,0}, {144,172,0,255,0}, {142,172,0,255,0}, {131,172,0,255,0}, {119,172,0,255,0}, {111,172,0,255,0}, {90,171,0,255,0}, {72,171,0,255,0}, {60,171,0,255,0}, {54,172,0,255,0}, {48,172,0,255,0}, {46,172,0,255,0}, {42,172,0,255,0}, {32,172,0,255,0}, {22,172,0,255,0}, {20,172,0,255,0}, {10,172,0,255,0}, {1,173,0,255,0}, {-21,173,0,255,0}, {-21,173,0,255,0}, {-31,174,0,255,0}, {-34,175,0,255,0}, {-40,175,0,255,0}, {-61,174,0,255,0}, {-61,174,0,255,0}, {-71,174,0,255,0}, {-89,174,0,255,0}, {-96,173,0,255,0}, {-102,173,0,255,0}, {-111,173,0,255,0}, {-115,173,0,255,0}, {-136,173,0,255,0}, {-136,173,0,255,0}, {-146,173,0,255,0}, {-157,173,0,255,0}, {-166,173,0,255,0}, {-173,173,0,255,0}, {-175,173,0,255,0}, {-180,173,0,255,0}, {-180,173,0,255,0}, {-181,173,0,255,0}, {-182,173,0,255,0}, {-182,162,0,255,0}, {-180,153,0,255,0}, {-178,145,0,255,0}, {-178,143,0,255,0}, {-178,137,0,255,0}, {-180,128,0,255,0}, {-181,120,0,255,0}, {-182,113,0,255,0}, {-183,104,0,255,0}, {-184,95,0,255,0}, {-185,89,0,255,0}, {-185,85,0,255,0}, {-185,77,0,255,0}, {-185,70,0,255,0}, {-184,63,0,255,0}, {-184,56,0,255,0}, {-182,48,0,255,0}, {-180,40,0,255,0}, {-179,31,0,255,0}, {-179,22,0,255,0}, {-178,17,0,255,0}, {-178,11,0,255,0}, {-180,-19,0,255,0}};
float cBubble[][] = {{-2,-1,255,255,0,120.0}, {67,-2,255,0,255,59.0}, {-69,0,255,0,255,59.0}, {-5,-71,255,0,255,59.0}, {-2,63,255,0,255,59.0}, {56,-63,53,187,51,29.0}, {-71,-66,53,187,51,29.0}, {-60,55,53,187,51,29.0}, {60,59,53,187,51,29.0}, {-92,-38,214,26,176,9.0}, {-48,-88,214,26,176,9.0}, {34,-88,214,26,176,9.0}, {69,-41,214,26,176,9.0}, {76,38,214,26,176,9.0}, {36,74,214,26,176,9.0}, {-42,72,214,26,176,9.0}, {-82,36,214,26,176,9.0}};
float cBLM[][] = {{-93,-219,255,255,255,20.0}, {-109,-221,255,255,255,20.0}, {-128,-221,255,255,255,20.0}, {-146,-215,255,255,255,20.0}, {-164,-213,255,255,255,20.0}, {-169,-200,255,255,255,20.0}, {-173,-175,255,255,255,20.0}, {-170,-160,255,255,255,20.0}, {-173,-137,255,255,255,20.0}, {-171,-105,255,255,255,20.0}, {-171,-86,255,255,255,20.0}, {-171,-68,255,255,255,20.0}, {-171,-47,255,255,255,20.0}, {-172,-28,255,255,255,20.0}, {-174,3,255,255,255,20.0}, {-176,15,255,255,255,20.0}, {-176,38,255,255,255,20.0}, {-176,52,255,255,255,20.0}, {-174,63,255,255,255,20.0}, {-181,81,255,255,255,20.0}, {-181,95,255,255,255,20.0}, {-182,123,255,255,255,20.0}, {-186,151,255,255,255,20.0}, {-186,170,255,255,255,20.0}, {-180,192,255,255,255,20.0}, {-176,196,255,255,255,20.0}, {-164,192,255,255,255,20.0}, {-148,189,255,255,255,20.0}, {-125,187,255,255,255,20.0}, {-113,181,255,255,255,20.0}, {-108,178,255,255,255,20.0}, {-96,171,255,255,255,20.0}, {-82,160,255,255,255,20.0}, {-72,152,255,255,255,20.0}, {-66,143,255,255,255,20.0}, {-62,127,255,255,255,20.0}, {-62,113,255,255,255,20.0}, {-64,102,255,255,255,20.0}, {-67,93,255,255,255,20.0}, {-71,79,255,255,255,20.0}, {-80,52,255,255,255,20.0}, {-87,33,255,255,255,20.0}, {-94,23,255,255,255,20.0}, {-103,12,255,255,255,20.0}, {-122,-2,255,255,255,20.0}, {-136,-7,255,255,255,20.0}, {-146,-10,255,255,255,20.0}, {-155,-13,255,255,255,20.0}, {-144,-16,255,255,255,20.0}, {-121,-20,255,255,255,20.0}, {-95,-23,255,255,255,20.0}, {-72,-30,255,255,255,20.0}, {-61,-35,255,255,255,20.0}, {-39,-49,255,255,255,20.0}, {-21,-75,255,255,255,20.0}, {-17,-96,255,255,255,20.0}, {-14,-116,255,255,255,20.0}, {-28,-152,255,255,255,20.0}, {-48,-184,255,255,255,20.0}, {-66,-208,255,255,255,20.0}, {-85,-219,255,255,255,20.0}, {25,-219,255,255,255,20.0}, {25,-213,255,255,255,20.0}, {26,-186,255,255,255,20.0}, {29,-173,255,255,255,20.0}, {32,-162,255,255,255,20.0}, {34,-142,255,255,255,20.0}, {34,-121,255,255,255,20.0}, {33,-97,255,255,255,20.0}, {32,-73,255,255,255,20.0}, {32,-56,255,255,255,20.0}, {32,-40,255,255,255,20.0}, {33,-17,255,255,255,20.0}, {35,5,255,255,255,20.0}, {33,33,255,255,255,20.0}, {30,59,255,255,255,20.0}, {29,73,255,255,255,20.0}, {32,112,255,255,255,20.0}, {38,153,255,255,255,20.0}, {40,184,255,255,255,20.0}, {38,211,255,255,255,20.0}, {48,217,255,255,255,20.0}, {65,218,255,255,255,20.0}, {75,216,255,255,255,20.0}, {92,216,255,255,255,20.0}, {103,215,255,255,255,20.0}, {114,213,255,255,255,20.0}, {140,212,255,255,255,20.0}, {166,211,255,255,255,20.0}, {191,211,255,255,255,20.0}, {210,211,255,255,255,20.0}, {217,211,255,255,255,20.0}, {244,211,255,255,255,20.0}, {252,211,255,255,255,20.0}, {302,211,255,255,255,20.0}, {302,210,255,255,255,20.0}, {306,198,255,255,255,20.0}, {314,174,255,255,255,20.0}, {318,156,255,255,255,20.0}, {322,135,255,255,255,20.0}, {326,115,255,255,255,20.0}, {332,84,255,255,255,20.0}, {340,56,255,255,255,20.0}, {345,37,255,255,255,20.0}, {350,15,255,255,255,20.0}, {353,-14,255,255,255,20.0}, {360,-35,255,255,255,20.0}, {370,-66,255,255,255,20.0}, {379,-93,255,255,255,20.0}, {390,-120,255,255,255,20.0}, {399,-141,255,255,255,20.0}, {411,-172,255,255,255,20.0}, {420,-193,255,255,255,20.0}, {424,-201,255,255,255,20.0}, {430,-190,255,255,255,20.0}, {434,-175,255,255,255,20.0}, {438,-161,255,255,255,20.0}, {445,-139,255,255,255,20.0}, {451,-124,255,255,255,20.0}, {456,-111,255,255,255,20.0}, {461,-88,255,255,255,20.0}, {464,-73,255,255,255,20.0}, {469,-54,255,255,255,20.0}, {476,-30,255,255,255,20.0}, {481,-11,255,255,255,20.0}, {488,12,255,255,255,20.0}, {490,19,255,255,255,20.0}, {491,21,255,255,255,20.0}, {495,4,255,255,255,20.0}, {504,-21,255,255,255,20.0}, {508,-33,255,255,255,20.0}, {517,-55,255,255,255,20.0}, {524,-79,255,255,255,20.0}, {534,-106,255,255,255,20.0}, {545,-135,255,255,255,20.0}, {553,-161,255,255,255,20.0}, {563,-183,255,255,255,20.0}, {566,-191,255,255,255,20.0}, {569,-195,255,255,255,20.0}, {574,-166,255,255,255,20.0}, {578,-143,255,255,255,20.0}, {580,-119,255,255,255,20.0}, {585,-87,255,255,255,20.0}, {592,-58,255,255,255,20.0}, {599,-31,255,255,255,20.0}, {607,-2,255,255,255,20.0}, {611,10,255,255,255,20.0}, {625,42,255,255,255,20.0}, {637,66,255,255,255,20.0}, {643,83,255,255,255,20.0}, {653,126,255,255,255,20.0}, {665,150,255,255,255,20.0}, {682,191,255,255,255,20.0}, {686,208,255,255,255,20.0}, {-543,-205,255,255,255,20.0}, {-546,-185,255,255,255,20.0}, {-545,-167,255,255,255,20.0}, {-542,-152,255,255,255,20.0}, {-538,-128,255,255,255,20.0}, {-537,-102,255,255,255,20.0}, {-540,-77,255,255,255,20.0}, {-541,-53,255,255,255,20.0}, {-541,-37,255,255,255,20.0}, {-541,-15,255,255,255,20.0}, {-541,6,255,255,255,20.0}, {-542,39,255,255,255,20.0}, {-543,60,255,255,255,20.0}, {-543,88,255,255,255,20.0}, {-542,122,255,255,255,20.0}, {-544,151,255,255,255,20.0}, {-544,185,255,255,255,20.0}, {-543,200,255,255,255,20.0}, {-410,-208,255,255,255,20.0}, {-409,-186,255,255,255,20.0}, {-411,-168,255,255,255,20.0}, {-410,-140,255,255,255,20.0}, {-409,-110,255,255,255,20.0}, {-411,-77,255,255,255,20.0}, {-406,-31,255,255,255,20.0}, {-404,0,255,255,255,20.0}, {-406,18,255,255,255,20.0}, {-406,49,255,255,255,20.0}, {-407,89,255,255,255,20.0}, {-417,125,255,255,255,20.0}, {-417,148,255,255,255,20.0}, {-416,177,255,255,255,20.0}, {-413,195,255,255,255,20.0}, {-692,-121,255,255,255,20.0}, {-680,-120,255,255,255,20.0}, {-649,-120,255,255,255,20.0}, {-624,-120,255,255,255,20.0}, {-571,-120,255,255,255,20.0}, {-544,-121,255,255,255,20.0}, {-518,-122,255,255,255,20.0}, {-508,-122,255,255,255,20.0}, {-468,-123,255,255,255,20.0}, {-439,-124,255,255,255,20.0}, {-411,-126,255,255,255,20.0}, {-391,-126,255,255,255,20.0}, {-380,-126,255,255,255,20.0}, {-350,-125,255,255,255,20.0}, {-320,-125,255,255,255,20.0}, {-263,-124,255,255,255,20.0}, {-257,-124,255,255,255,20.0}, {-680,47,255,255,255,20.0}, {-672,46,255,255,255,20.0}, {-658,43,255,255,255,20.0}, {-643,43,255,255,255,20.0}, {-631,43,255,255,255,20.0}, {-602,43,255,255,255,20.0}, {-576,43,255,255,255,20.0}, {-552,43,255,255,255,20.0}, {-516,44,255,255,255,20.0}, {-496,44,255,255,255,20.0}, {-468,44,255,255,255,20.0}, {-435,44,255,255,255,20.0}, {-392,46,255,255,255,20.0}, {-376,47,255,255,255,20.0}, {-352,47,255,255,255,20.0}, {-326,49,255,255,255,20.0}, {-305,49,255,255,255,20.0}, {-284,50,255,255,255,20.0}, {-269,51,255,255,255,20.0}, {-261,51,255,255,255,20.0}, {-325,2,255,0,0,9.0}, {-334,-9,255,0,0,9.0}, {-337,-14,255,0,0,9.0}, {-346,-28,255,0,0,9.0}, {-349,-42,255,0,0,9.0}, {-349,-54,255,0,0,9.0}, {-347,-70,255,0,0,9.0}, {-343,-83,255,0,0,9.0}, {-334,-89,255,0,0,9.0}, {-327,-91,255,0,0,9.0}, {-323,-91,255,0,0,9.0}, {-319,-89,255,0,0,9.0}, {-318,-73,255,0,0,9.0}, {-317,-65,255,0,0,9.0}, {-317,-59,255,0,0,9.0}, {-316,-53,255,0,0,9.0}, {-315,-59,255,0,0,9.0}, {-305,-75,255,0,0,9.0}, {-300,-80,255,0,0,9.0}, {-293,-83,255,0,0,9.0}, {-289,-83,255,0,0,9.0}, {-288,-83,255,0,0,9.0}, {-279,-72,255,0,0,9.0}, {-272,-62,255,0,0,9.0}, {-272,-56,255,0,0,9.0}, {-276,-44,255,0,0,9.0}, {-285,-32,255,0,0,9.0}, {-296,-18,255,0,0,9.0}, {-303,-8,255,0,0,9.0}, {-310,7,255,0,0,9.0}, {-310,12,255,0,0,9.0}, {-310,20,255,0,0,9.0}, {-316,8,255,0,0,9.0}, {-308,17,255,0,0,9.0}, {172,109,255,0,0,28.0}, {165,98,255,0,0,28.0}, {138,66,255,0,0,28.0}, {131,56,255,0,0,28.0}, {117,39,255,0,0,28.0}, {106,22,255,0,0,28.0}, {96,4,255,0,0,28.0}, {89,-15,255,0,0,28.0}, {86,-51,255,0,0,28.0}, {87,-71,255,0,0,28.0}, {105,-99,255,0,0,28.0}, {116,-110,255,0,0,28.0}, {125,-119,255,0,0,28.0}, {139,-126,255,0,0,28.0}, {154,-129,255,0,0,28.0}, {168,-130,255,0,0,28.0}, {182,-128,255,0,0,28.0}, {196,-117,255,0,0,28.0}, {204,-100,255,0,0,28.0}, {204,-83,255,0,0,28.0}, {201,-62,255,0,0,28.0}, {201,-61,255,0,0,28.0}, {206,-79,255,0,0,28.0}, {214,-96,255,0,0,28.0}, {230,-111,255,0,0,28.0}, {237,-115,255,0,0,28.0}, {253,-118,255,0,0,28.0}, {263,-111,255,0,0,28.0}, {274,-94,255,0,0,28.0}, {276,-76,255,0,0,28.0}, {272,-46,255,0,0,28.0}, {266,-39,255,0,0,28.0}, {251,-27,255,0,0,28.0}, {237,-10,255,0,0,28.0}, {221,21,255,0,0,28.0}, {210,56,255,0,0,28.0}, {201,87,255,0,0,28.0}, {192,116,255,0,0,28.0}, {-101,-83,255,0,0,4.0}, {-106,-86,255,0,0,4.0}, {-114,-93,255,0,0,4.0}, {-115,-94,255,0,0,4.0}, {-121,-103,255,0,0,4.0}, {-126,-117,255,0,0,4.0}, {-130,-130,255,0,0,4.0}, {-133,-141,255,0,0,4.0}, {-129,-165,255,0,0,4.0}, {-121,-169,255,0,0,4.0}, {-116,-170,255,0,0,4.0}, {-110,-170,255,0,0,4.0}, {-107,-169,255,0,0,4.0}, {-103,-153,255,0,0,4.0}, {-103,-146,255,0,0,4.0}, {-103,-146,255,0,0,4.0}, {-101,-150,255,0,0,4.0}, {-97,-160,255,0,0,4.0}, {-93,-165,255,0,0,4.0}, {-89,-166,255,0,0,4.0}, {-83,-166,255,0,0,4.0}, {-78,-165,255,0,0,4.0}, {-72,-159,255,0,0,4.0}, {-69,-147,255,0,0,4.0}, {-72,-136,255,0,0,4.0}, {-77,-123,255,0,0,4.0}, {-87,-101,255,0,0,4.0}, {-91,-92,255,0,0,4.0}, {-93,-82,255,0,0,4.0}, {-132,-150,255,0,0,4.0}, {-644,6,255,0,0,11.0}, {-662,0,255,0,0,11.0}, {-667,-10,255,0,0,11.0}, {-673,-23,255,0,0,11.0}, {-677,-34,255,0,0,11.0}, {-680,-53,255,0,0,11.0}, {-675,-72,255,0,0,11.0}, {-668,-83,255,0,0,11.0}, {-654,-90,255,0,0,11.0}, {-644,-91,255,0,0,11.0}, {-635,-89,255,0,0,11.0}, {-631,-75,255,0,0,11.0}, {-632,-69,255,0,0,11.0}, {-633,-65,255,0,0,11.0}, {-627,-75,255,0,0,11.0}, {-621,-82,255,0,0,11.0}, {-613,-84,255,0,0,11.0}, {-607,-84,255,0,0,11.0}, {-604,-84,255,0,0,11.0}, {-603,-65,255,0,0,11.0}, {-608,-46,255,0,0,11.0}, {-624,-17,255,0,0,11.0}, {-629,-9,255,0,0,11.0}, {-631,-3,255,0,0,11.0}, {-621,-18,255,0,0,11.0}, {-616,-33,255,0,0,11.0}, {-612,-48,255,0,0,11.0}, {-488,4,255,0,0,11.0}, {-489,-1,255,0,0,11.0}, {-494,-11,255,0,0,11.0}, {-496,-16,255,0,0,11.0}, {-499,-20,255,0,0,11.0}, {-503,-32,255,0,0,11.0}, {-507,-45,255,0,0,11.0}, {-510,-63,255,0,0,11.0}, {-505,-78,255,0,0,11.0}, {-496,-86,255,0,0,11.0}, {-479,-91,255,0,0,11.0}, {-471,-89,255,0,0,11.0}, {-468,-76,255,0,0,11.0}, {-469,-63,255,0,0,11.0}, {-469,-57,255,0,0,11.0}, {-466,-65,255,0,0,11.0}, {-459,-78,255,0,0,11.0}, {-452,-87,255,0,0,11.0}, {-449,-88,255,0,0,11.0}, {-441,-88,255,0,0,11.0}, {-440,-72,255,0,0,11.0}, {-440,-62,255,0,0,11.0}, {-441,-52,255,0,0,11.0}, {-445,-37,255,0,0,11.0}, {-451,-21,255,0,0,11.0}, {-468,-2,255,0,0,11.0}, {-477,13,255,0,0,11.0}, {-477,15,255,0,0,11.0}, {-459,-12,255,0,0,11.0}, {-131,143,255,0,0,3.0}, {-138,137,255,0,0,3.0}, {-141,132,255,0,0,3.0}, {-146,123,255,0,0,3.0}, {-151,112,255,0,0,3.0}, {-154,99,255,0,0,3.0}, {-155,85,255,0,0,3.0}, {-152,70,255,0,0,3.0}, {-141,58,255,0,0,3.0}, {-135,55,255,0,0,3.0}, {-122,55,255,0,0,3.0}, {-120,64,255,0,0,3.0}, {-119,77,255,0,0,3.0}, {-119,80,255,0,0,3.0}, {-116,66,255,0,0,3.0}, {-107,63,255,0,0,3.0}, {-107,63,255,0,0,3.0}, {-102,64,255,0,0,3.0}, {-98,67,255,0,0,3.0}, {-91,85,255,0,0,3.0}, {-92,106,255,0,0,3.0}, {-97,116,255,0,0,3.0}, {-110,130,255,0,0,3.0}, {-120,143,255,0,0,3.0}, {-124,152,255,0,0,3.0}, {460,187,255,0,0,30.0}, {461,186,255,0,0,30.0}, {447,170,255,0,0,30.0}, {440,162,255,0,0,30.0}, {431,152,255,0,0,30.0}, {418,133,255,0,0,30.0}, {410,117,255,0,0,30.0}, {404,97,255,0,0,30.0}, {405,78,255,0,0,30.0}, {418,69,255,0,0,30.0}, {433,66,255,0,0,30.0}, {449,65,255,0,0,30.0}, {464,67,255,0,0,30.0}, {472,76,255,0,0,30.0}, {475,86,255,0,0,30.0}, {475,98,255,0,0,30.0}, {475,101,255,0,0,30.0}, {477,86,255,0,0,30.0}, {481,79,255,0,0,30.0}, {491,71,255,0,0,30.0}, {502,66,255,0,0,30.0}, {506,66,255,0,0,30.0}, {515,74,255,0,0,30.0}, {520,80,255,0,0,30.0}, {526,86,255,0,0,30.0}, {532,96,255,0,0,30.0}, {533,107,255,0,0,30.0}, {527,120,255,0,0,30.0}, {510,137,255,0,0,30.0}, {497,151,255,0,0,30.0}, {490,170,255,0,0,30.0}, {488,199,255,0,0,30.0}, {479,204,255,0,0,30.0}};
float cBLAH[][] = {{-116,-111,255,13,221,52.0}, {-140,-55,255,13,221,52.0}, {-143,34,255,13,221,52.0}, {-85,84,255,13,221,52.0}, {-44,105,255,13,221,52.0}, {19,93,255,13,221,52.0}, {61,63,255,13,221,52.0}, {106,8,255,13,221,52.0}, {120,-44,255,13,221,52.0}, {74,-89,255,13,221,52.0}, {25,-106,255,13,221,52.0}, {-67,-125,255,13,221,52.0}, {-81,-125,255,13,221,52.0}, {21,-212,0,181,221,52.0}, {104,-181,0,181,221,52.0}, {177,-118,0,181,221,52.0}, {215,-76,0,181,221,52.0}, {226,-11,0,181,221,52.0}, {181,96,0,181,221,52.0}, {134,152,0,181,221,52.0}, {-27,187,0,181,221,52.0}, {-126,197,0,181,221,52.0}, {-254,175,0,181,221,52.0}, {-278,112,0,181,221,52.0}, {-278,-6,0,181,221,52.0}, {-233,-94,0,181,221,52.0}, {-158,-204,0,181,221,52.0}, {-66,-262,0,181,221,52.0}, {-53,-270,0,181,221,52.0}};

MidiBus myBus;

float spaceC;        // How much space is in between each firework launcher
float grav = 0.09;

float angleNum = 0;

void setup(){
  
  //fullScreen(P2D);
  size(1920, 1080, P2D);
  frameRate(FR);
  background(0);
  
  //-----------------------MINIM-----------------------
  /*minim = new Minim(this);
 
  //in = minim.getLineIn(Minim.MONO,buffer_size,sample_rate);
  song = minim.loadFile("Blocks.mp3");
  song.play();
 
  // create an FFT object that has a time-domain buffer 
  // the same size as line-in's sample buffer
  
  //fft = new FFT(in.bufferSize(), in.sampleRate());
  fft = new FFT(song.bufferSize(), song.sampleRate());
  
  
  // Tapered window important for log-domain display
  //fft.window(FFT.HAMMING);

  // initialize peak-hold structures
  peaksize = 1+Math.round(fft.specSize()/binsperband);
  peaks = new float[peaksize];
  peak_age = new int[peaksize];*/
  //-------------------------------------------------------
  
  spaceC = width / keys;
  
  //MidiBus.list();
  myBus = new MidiBus(this, 1, 4); // New MidiBus object connecting to the MIDI
  
}

void draw(){
  
  // perform a forward FFT on the samples in input buffer
  //fft.forward(song.mix);
  
  /*numLevel = 0;
  
  for(int i = 0; i < spectrum_width; i++)  {
    // draw the line for frequency band i using dB scale
    float val = dB_scale*(20*((float)Math.log10(fft.getBand(i))) + gain);
    if(val>0){numLevel += val;}
  }*/
  
  fill(0, 50);
  rect(0, 0, width, height);
  
  for(int i = 0; i < fireworks.size(); i++){
    if(!fireworks.get(i).done){
      fireworks.get(i).draw();
    }
    else{
      fireworks.remove(i);
    }
        
  }
  
  for(int i = 0; i < explosions.size(); i++){
    if(!explosions.get(i).done){
      explosions.get(i).draw();
    }
    else{
      explosions.remove(i);
    }
        
  }
  
  for(int i = 0; i < shapedExplosions.size(); i++){
    if(!shapedExplosions.get(i).done){
      shapedExplosions.get(i).draw();
    }
    else{
      shapedExplosions.remove(i);
    }
        
  }
  
  //println(numLevel);
  
  
}


//  _______________________________ MIDI HANDLING _______________________________

void noteOn(Note note) { // When we receive a noteOn from the MIDI keyboard

  //println("Channel:"+note.channel());
  //println("Pitch:"+note.pitch());
  //println("Velocity:"+note.velocity());
  
  fireworks.add(new Firework((note.pitch+1)*spaceC, note.velocity(), 5));
  
}

void noteOff(Note note) { // When we receive a noteOff from the MIDI
  
  //println("Channel:"+note.channel());
  //println("Pitch:"+note.pitch());
  //println("Velocity:"+note.velocity());
  
}

void controllerChange(ControlChange change) {
  
  println("Channel: " + change.channel());
  println("Number: " + change.number());
  println("Value: " + change.value());
  //println(change.toString());
  
  
  
  if(change.number() == 1){
    v = change.value() + 1;
    if(v <= 64){
      angleNum = (64-v) / 10;
    }
    else{
      angleNum = -((v-63) / 10);
    }
  }
  
  if(change.number() == 20){
    SLIDER1 = change.value() + 1;
  }
  if(change.number() == 21){
    SLIDER2 = change.value() + 1;
  }
  if(change.number() == 22){
    SLIDER3 = change.value() + 1;
  }
  
}

//  ------------------------------- FIREWORKS ----------------------------------

class Firework {
  
  float x1, y1, x2, y2, velX, velY, size;
  int iter = 0;
  boolean exploding = false, done = false;
  
  Firework(float xp, float v, float s){
    x1 = xp;
    y1 = height;
    velX = angleNum;
    velY = v/10;
    size = s;
  }
  
  void draw(){
    
    if(!exploding){
      stroke(255);
      strokeWeight(size);
      line(x1, y1, x1, y1-10);
      
      iter++;
      x1 -= velX;
      y1 -= velY;
      velY -= grav;
      
      if(velY <= 0){
        //explosions.add(new Explosion(x1, y1, int(random(50, 90))));
        shapedExplosions.add(new ShapedExplosion(x1, y1, cBLAH));
        done = true;
      }
      
    }
    
    
  }
  
}

class Explosion {
  
  int amt;
  float[] x, y, velX, velY;
  boolean done = false;
  int whatColor;
  int iter = 0;
  int size = 0;
  float fade = 0.708;
  
  Explosion(float xp, float yp, int a){
    
    float spacing = random(3, 9);
    
    x = new float[a];
    for (int j = 0; j < a; j++){
      x[j] = xp;
    }
    y = new float[a];
    for (int j = 0; j < a; j++){
      y[j] = yp;
    }
    velX = new float[a];
    for (int j = 0; j < a; j++){
      velX[j] = random(-spacing, spacing);
    }
    velY = new float[a];
    for (int j = 0; j < a; j++){
      velY[j] = random(-spacing, spacing);
    }
    
    amt = a;
    whatColor = int(random(0, 6));
    size = 1;//int(random(1, 2));
    
  }
  
  void draw(){
    
    fill(colors[whatColor][0], colors[whatColor][1], colors[whatColor][2], 255-(fade*iter));
    noStroke();
    
    for(int i = 0; i < amt; i++){
      
      //circle(x[i], y[i], size+(map(numLevel, 7000, 18000, 1, 40)));
      //circle(x[i], y[i], size+(map(SLIDER1, 1, 128, 1, 40)));
      ellipse(x[i], y[i], size+(map(SLIDER2, 1, 128, 1, 40)), map(SLIDER3, 1, 128, 1, 40));
      
      if(y[i] < height){
        x[i] += velX[i];
        y[i] += velY[i];
        velY[i] += grav;
        if(y[i] >= height){
          y[i] = height;
          velX[i] = 0;
          velY[i] = 0;
        }
      }
      
    }
    
    iter++;
    
    if(iter > 360){
      done = true;
    }
    
  }
  
}

class ShapedExplosion {
  
  float points[][];
  int amt = 0;
  float[] x, y, velX, velY;
  boolean done = false;
  boolean customColored = true;
  int whatColor;
  float iter = 0;
  int size = 0;
  float fade = 0.708;
  float randomE = 0;
  float spacing;
  
  ShapedExplosion(float xp, float yp, float pts[][]){
    
    spacing = random(0.5, 2.5);
    
    amt = pts.length;
    
    randomE = random(0, 3);
    
    
    x = new float[amt];
    for (int j = 0; j < amt; j++){
      x[j] = xp; //+ pts[j][0]*randomE;
    }
    y = new float[amt];
    for (int j = 0; j < amt; j++){
      y[j] = yp; //+ pts[j][1]*randomE;
    }
    velX = new float[amt];
    for (int j = 0; j < amt; j++){
      velX[j] = 0;
    }
    velY = new float[amt];
    for (int j = 0; j < amt; j++){
      velY[j] = 0;
    }
    
    whatColor = int(random(0, 6));
    size = int(random(1, 5));
    
    points = pts;
    
  }
  
  void draw(){
      
    //fill(colors[whatColor][0], colors[whatColor][1], colors[whatColor][2], 255-(fade*iter));
    noStroke();
    
    for(int i = 0; i < amt; i++){
      
      fill(points[i][2], points[i][3], points[i][4]);
      circle(x[i], y[i], points[i][5]+(map(numLevel, 7000, 18000, 1, 40)));
      
      if(y[i] < height){
        
        if(iter<30){
          
          x[i] += ((points[i][0] * spacing) / (30/(1/((iter*.1)+1))));
          y[i] += ((points[i][1] * spacing) / (30/(1/((iter*.1)+1))));
          
          if(iter == 29){
            velX[i] = ((points[i][0] * spacing) / (30/(1/((iter*.1)+1))));
            velY[i] = ((points[i][1] * spacing) / (30/(1/((iter*.1)+1))));
          }
          
        }
        
        x[i] += velX[i];
        y[i] += velY[i];
        
        if(iter > 30){
          velY[i] += grav;
        }
        
        if(y[i] >= height){
          y[i] = height;
          velX[i] = 0;
          velY[i] = 0;
        }
      }
      
    }
    
    iter++;
    
    if(iter > 360){
      done = true;
    }
    
  }
  
}
